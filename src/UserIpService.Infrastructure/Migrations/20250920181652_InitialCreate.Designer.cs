// <auto-generated />
using System;
using System.Net;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserIpService.Infrastructure;

#nullable disable

namespace UserIpService.Infrastructure.Migrations
{
    [DbContext(typeof(UserIpContext))]
    [Migration("20250920181652_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserIpService.Core.Entities.UserIp", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("IpText")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("FirstSeen")
                        .HasColumnType("timestamp with time zone");

                    b.Property<IPAddress>("IpAddress")
                        .IsRequired()
                        .HasColumnType("inet");

                    b.Property<DateTimeOffset>("LastSeen")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "IpText");

                    b.HasIndex("IpText");

                    b.ToTable("UserIps");
                });
#pragma warning restore 612, 618
        }
    }
}
